	Included is an Excel spreadsheet and some graphs detailing the performance data gathered from this latest C# WIC interpreter implementation as well as the results from the prior implementations in C and F#. Overall the efficiency of this C# interpreter falls somewhere between the F# version and the C version. While it soundly beats the F# interpreter in all sample sizes, the C interpreter seemed to run a little over twice as fast once the M size was large enough. When sample size = 1,000 the C# interpreter actually outperformed its C counterpart, most likely due to a more streamlined loading/beginning proccess. Once it comes down to the true efficiency of the interpreters as they run code, the C interpreter quickly distanced itself. One interesting result noted in my timing results is what appears to be a slight slowdown across all the implementations once M sizes really begin to become extremely large. Because those tests took so long, I guess the slowdown is likely due to the program's execution receiving varying priority from the OS as it is busy accomplishing other things. 